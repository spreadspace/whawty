# redirect to a localhost-only admin page of whawty-auth
location ^~ /whawty-auth/ {
    proxy_pass http://127.0.0.1:9000/;
    proxy_set_header X-BaseURI /whawty-auth/ # set to the matched prefix, necessary for redirects to generate correct URLs
}

# to be used as auth_request endpoint for other locations
location = /auth {
    internal;

    proxy_pass http://127.0.0.1:8082;

    # yes, we explicitly need to do both...
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";

    proxy_set_header Host           $http_host;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP      $remote_addr;
}

# login response must set a cookie such that /auth will be able to access it
# on success, must redirect (e.g. w/query param ?redir=target_url), obviously
# with target_url restriction
location = /login {
    proxy_pass http://127.0.0.1:9001/?redir=$arg_redir;

    proxy_set_header Host           $http_host;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Real-IP      $remote_addr;
}

# how to use auth_request response
location ^~ /app {
    error_page 401 =200 /login/?redir=$http_host$request_uri;
    auth_request /auth;
    auth_request_set $user $upstream_http_remote_user;

    proxy_set_header X-Remote-User $user;

    # if all is good (auth_request returned 200), continue w/application
    proxy_pass http://127.0.0.1:8080;
}
